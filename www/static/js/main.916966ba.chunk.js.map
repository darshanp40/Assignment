{"version":3,"sources":["Configurations/MapConfig.js","Components/SearchBar/index.js","App.js","index.js"],"names":["MapConfig","center","lat","lng","zoom","styles","featureType","stylers","hue","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","locationData","searchData","navBarClass","filterList","bind","assertThisInitialized","toggleNavBar","evt","searchValue","target","value","toLowerCase","forEach","location","index","bResult","place","indexOf","markerData","setVisible","push","setState","prevProps","_this2","react_default","a","createElement","className","concat","onClick","type","placeholder","autoComplete","id","onChange","map","item","key","Component","App","mapConfig","prevInfoWindow","initMap","fetch","then","res","json","result","console","log","window","loadScript","catch","error","fetchLocationData","google","maps","Map","document","getElementById","parseFloat","that","position","marker","Marker","contentString","infowindow","InfoWindow","content","addListener","close","open","event","addDomListener","getCenter","trigger","setCenter","addEventListener","SearchBar_SearchBar","ReactDOM","render","src_App_0"],"mappings":"wNAAaA,EAAY,CACvBC,OAAQ,CAAEC,IAAK,UAAWC,IAAK,WAC/BC,KAAM,GACNC,OAAQ,CACN,CACEC,YAAa,YACbC,QAAS,CAAC,CAAEC,IAAK,aAEnB,CACEF,YAAa,eACbC,QAAS,CAAC,CAAEC,IAAK,aAEnB,CACEF,YAAa,gBACbC,QAAS,CAAC,CAAEC,IAAK,aAEnB,CACEF,YAAa,aACbC,QAAS,CAAC,CAAEC,IAAK,aAEnB,CACEF,YAAa,QACbC,QAAS,CAAC,CAAEC,IAAK,aAEnB,CACEF,YAAa,MACbC,QAAS,CAAC,CAAEC,IAAK,eCxBFC,2BACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,aAAcR,EAAKD,MAAMU,WACzBC,YAAa,IAEjBV,EAAKW,WAAaX,EAAKW,WAAWC,KAAhBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAClBA,EAAKc,aAAed,EAAKc,aAAaF,KAAlBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAPLA,0EASRe,GACP,IAAIC,EAAcD,EAAIE,OAAOC,MAAMC,cAC/BX,EAAe,GACnBL,KAAKJ,MAAMU,WAAWW,QAAQ,SAAUC,EAAUC,GAC9C,IAAIC,EAAWF,EAASG,MAAML,cAAcM,QAAQT,IAAgB,EACpEb,KAAKJ,MAAM2B,WAAWJ,GAAOK,WAAWJ,GACpCA,GACAf,EAAaoB,KAAKP,IAExBT,KAAKT,OACPA,KAAK0B,SAAS,CACVrB,aAAcA,+CAGHsB,GAEX3B,KAAKJ,MAAMU,aAAeqB,EAAUrB,YACpCN,KAAK0B,SAAS,CACVrB,aAAcL,KAAKJ,MAAMU,oDAKjCN,KAAK0B,SAAS,CACVnB,YAAwC,SAA3BP,KAAKI,MAAMG,YAAyB,GAAK,0CAGrD,IAAAqB,EAAA5B,KACL,OACI6B,EAAAC,EAAAC,cAAA,WAASC,UAAS,kBAAAC,OAAoBjC,KAAKI,MAAMG,cAC7CsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaE,QAASlC,KAAKW,cACtCkB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOC,YAAY,uBAAuBJ,UAAU,iBAAiBK,aAAa,MAAMC,GAAG,eAAeC,SAAUvC,KAAKQ,cAEzIqB,EAAAC,EAAAC,cAAA,MAAIO,GAAG,cAAcN,UAAU,gBAEvBhC,KAAKI,MAAMC,aAAamC,IAAI,SAACC,EAAMC,GAC/B,OACIb,EAAAC,EAAAC,cAAA,MAAIW,IAAKA,EAAKV,UAAU,YAAYE,QAASN,EAAKjB,cAAe8B,EAAKpB,oBAzDvEsB,cCoGxBC,cAhGb,SAAAA,EAAYhD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IACjB/C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8C,GAAAzC,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,aAAc,GACdkB,WAAY,GACZsB,UAAW3D,EACX4D,eAAgB,IAElBjD,EAAKkD,QAAUlD,EAAKkD,QAAQtC,KAAbX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAREA,mFAUC,IAAA+B,EAAA5B,KAClBgD,MAAM,aAAaC,KAAK,SAACC,GAAD,OAASA,EAAIC,SAAQF,KAAK,SAACG,GACjDC,QAAQC,IAAIF,GACZxB,EAAKF,SAAS,CACZrB,aAAc+C,IAEhBG,OAAOC,WAAW,0GACjBC,MAAM,SAACC,GACRL,QAAQC,IAAII,iDAId1D,KAAK2D,oBACLJ,OAAOR,QAAU/C,KAAK+C,0CAGtBQ,OAAOf,IAAM,IAAIe,OAAOK,OAAOC,KAAKC,IAAIC,SAASC,eAAe,OAAQ,CACtE7E,OAAQ,CACNC,IAAK6E,WAAWjE,KAAKI,MAAMC,aAAa,GAAGa,SAAS9B,KACpDC,IAAK4E,WAAWjE,KAAKI,MAAMC,aAAa,GAAGa,SAAS7B,MAEtDC,KAAM,IAER,IAAIiC,EAAa,GACb2C,EAAOlE,KACXA,KAAKI,MAAMC,aAAaY,QAAQ,SAAUmC,GACxC,IAAIe,EAAWf,EAAOlC,SACtBiD,EAAS/E,IAAM6E,WAAWE,EAAS/E,KACnC+E,EAAS9E,IAAM4E,WAAWE,EAAS9E,KACnC,IAAI+E,EAAS,IAAIb,OAAOK,OAAOC,KAAKQ,OAAO,CACzCF,SAAUA,EACV3B,IAAKe,OAAOf,MAEV8B,EAAgB,kFAEiBlB,EAAO/B,MAAQ,KAAO+B,EAAOhD,MAAQ,mFAItDgD,EAAOlC,SAAS9B,IAAMgE,EAAOlC,SAAS7B,IACxD,qBAGEkF,EAAa,IAAIhB,OAAOK,OAAOC,KAAKW,WAAW,CACjDC,QAASH,IAEXF,EAAOM,YAAY,QAAS,WACtBR,EAAK9D,MAAM0C,gBACboB,EAAK9D,MAAM0C,eAAe6B,QAE5BJ,EAAWK,KAAKrB,OAAOf,IAAK4B,GAC5BF,EAAKxC,SAAS,CACZoB,eAAgByB,MAGpBhD,EAAWE,KAAK2C,KAElBF,EAAKxC,SAAS,CACZH,WAAYA,IAEdgC,OAAOK,OAAOC,KAAKgB,MAAMH,YAAYnB,OAAOf,IAAK,QAAS,WACpD0B,EAAK9D,MAAM0C,gBACboB,EAAK9D,MAAM0C,eAAe6B,UAG9BpB,OAAOK,OAAOC,KAAKgB,MAAMC,eAAevB,OAAQ,SAAU,WACxD,IAAIpE,EAASoE,OAAOf,IAAIuC,YACxBxB,OAAOK,OAAOC,KAAKgB,MAAMG,QAAQzB,OAAOf,IAAK,UAC7Ce,OAAOf,IAAIyC,UAAU9F,KAEvB4E,SAASmB,iBAAiB,QAAS,WAC7BhB,EAAK9D,MAAM0C,gBACboB,EAAK9D,MAAM0C,eAAe6B,UAE3B,oCAIH,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoD,EAAD,CAAW7E,WAAYN,KAAKI,MAAMC,aAAckB,WAAYvB,KAAKI,MAAMmB,aACvEM,EAAAC,EAAAC,cAAA,OAAKO,GAAG,gBA5FEK,aCDlByC,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASvB,SAASC,eAAe","file":"static/js/main.916966ba.chunk.js","sourcesContent":["export const MapConfig = {\n  center: { lat: 15.852792, lng: 74.498703 },\n  zoom: 14,\n  styles: [\n    {\n      featureType: \"landscape\",\n      stylers: [{ hue: \"#2e3d49\" }]\n    },\n    {\n      featureType: \"road.highway\",\n      stylers: [{ hue: \"#2e3d49\" }]\n    },\n    {\n      featureType: \"road.arterial\",\n      stylers: [{ hue: \"#2e3d49\" }]\n    },\n    {\n      featureType: \"road.local\",\n      stylers: [{ hue: \"#2e3d49\" }]\n    },\n    {\n      featureType: \"water\",\n      stylers: [{ hue: \"#2e3d49\" }]\n    },\n    {\n      featureType: \"poi\",\n      stylers: [{ hue: \"#2e3d49\" }]\n    }\n  ]\n};\n","import React, { Component } from 'react'\nimport './index.css'\nexport default class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locationData: this.props.searchData,\n            navBarClass: ''\n        }\n        this.filterList = this.filterList.bind(this);\n        this.toggleNavBar = this.toggleNavBar.bind(this);\n    }\n    filterList(evt) {\n        let searchValue = evt.target.value.toLowerCase();\n        var locationData = [];\n        this.props.searchData.forEach(function (location, index) {\n            var bResult = (location.place.toLowerCase().indexOf(searchValue) > -1);\n            this.props.markerData[index].setVisible(bResult);\n            if (bResult) {\n                locationData.push(location);\n            }\n        }.bind(this));\n        this.setState({\n            locationData: locationData\n        });\n    }\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.searchData !== prevProps.searchData) {\n            this.setState({\n                locationData: this.props.searchData\n            })\n        }\n    }\n    toggleNavBar() {\n        this.setState({\n            navBarClass: this.state.navBarClass === 'show' ? '' : 'show'\n        })\n    }\n    render() {\n        return (\n            <section className={`navbar-section ${this.state.navBarClass}`}>\n                <nav className=\"navbar\">\n                    <div className=\"navbar-heading\">\n                        <div className=\"nav-button\" onClick={this.toggleNavBar}>\n                            <span className=\"nav-slice\"></span>\n                            <span className=\"nav-slice\"></span>\n                            <span className=\"nav-slice\"></span>\n                        </div>\n                        <div className=\"clearfix\"></div>\n                    </div>\n                    <div className=\"navbar-content\">\n                        <div className=\"search-box\">\n                            <input type=\"text\" placeholder=\"Search place here...\" className=\"search-control\" autoComplete=\"off\" id=\"filter-input\" onChange={this.filterList} />\n                        </div>\n                        <ul id=\"list-spaces\" className=\"content-list\">\n                            {\n                                this.state.locationData.map((item, key) => {\n                                    return (\n                                        <li key={key} className=\"list-item\" onClick={this.toggleNavBar}>{item.place}</li>\n                                    )\n                                })\n                            }\n                        </ul>\n                    </div>\n                </nav>\n            </section>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { MapConfig } from './Configurations/MapConfig';\nimport './App.css';\nimport SearchBar from './Components/SearchBar'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationData: [],\n      markerData: [],\n      mapConfig: MapConfig,\n      prevInfoWindow: ''\n    }\n    this.initMap = this.initMap.bind(this);\n  }\n  fetchLocationData() {\n    fetch('data.json').then((res) => res.json()).then((result) => {\n      console.log(result);\n      this.setState({\n        locationData: result\n      })\n      window.loadScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBmXCfdkOXHw8dguZinjjDg55YPvGDrskI&callback=initMap\")\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n  componentDidMount() {\n    this.fetchLocationData();\n    window.initMap = this.initMap;\n  }\n  initMap() {\n    window.map = new window.google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: parseFloat(this.state.locationData[0].location.lat),\n        lng: parseFloat(this.state.locationData[0].location.lng)\n      },\n      zoom: 6\n    });\n    let markerData = [];\n    let that = this;\n    this.state.locationData.forEach(function (result) {\n      let position = result.location;\n      position.lat = parseFloat(position.lat);\n      position.lng = parseFloat(position.lng);\n      let marker = new window.google.maps.Marker({\n        position: position,\n        map: window.map\n      });\n      let contentString = '<div class=\"image-card\">' +\n        '<div class=\"card-header\">' +\n        '<div class=\"card-header-text\">' + result.place + ', ' + result.state + '</div>' +\n        '</div>' +\n        '<div class=\"card-footer\">' +\n        '<div class=\"card-footer-text\">' +\n        'Coordinates: ' + result.location.lat + result.location.lng +\n        '</div>' +\n        '</div>' +\n        '</div>';\n      let infowindow = new window.google.maps.InfoWindow({\n        content: contentString\n      });\n      marker.addListener('click', function () {\n        if (that.state.prevInfoWindow) {\n          that.state.prevInfoWindow.close();\n        }\n        infowindow.open(window.map, marker);\n        that.setState({\n          prevInfoWindow: infowindow\n        });\n      });\n      markerData.push(marker);\n    })\n    that.setState({\n      markerData: markerData\n    })\n    window.google.maps.event.addListener(window.map, 'click', function () {\n      if (that.state.prevInfoWindow) {\n        that.state.prevInfoWindow.close();\n      }\n    });\n    window.google.maps.event.addDomListener(window, \"resize\", function () {\n      var center = window.map.getCenter();\n      window.google.maps.event.trigger(window.map, \"resize\");\n      window.map.setCenter(center);\n    });\n    document.addEventListener('click', function() {\n      if (that.state.prevInfoWindow) {\n        that.state.prevInfoWindow.close();\n      }\n    }, true);\n\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBar searchData={this.state.locationData} markerData={this.state.markerData} />\n        <div id=\"map\"></div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}